# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
#    - name: Login to Docker Hub
#      uses: docker/login-action@v1
#      with:
#       username: ${{ secrets.DOCKER_HUB_USERNAME }}
#       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#    - name: checkout code
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#    - name: Semantic Versioning
#      uses: PaulHatch/semantic-version@v4.0.2
#      id: versioning
#      with:
#        # The prefix to use to identify tags
#        tag_prefix: "v"
#        # A string which, if present in a git commit, indicates that a change represents a
#        # major (breaking) change, supports regular expressions wrapped with '/'
#        major_pattern: "!feat"
#        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
#        minor_pattern: "feat"
#        # A string to determine the format of the version output
#        format: "${major}.${minor}.${patch}"
#        # Optional path to check for changes. If any changes are detected in the path the
#        # 'changed' output will true. Enter multiple paths separated by spaces.
#        change_path: "."
#        # Named version, will be used as suffix for name version tag
#        #          namespace: my-service
#        # If this is set to true, *every* commit will be treated as a new version.
#        bump_each_commit: true
#        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
#        search_commit_body: false
#        # The output method used to generate list of users, 'csv' or 'json'.
#        user_format_type: "csv"
#    - name: Build and push Docker image
#      id: docker_build
#      uses: docker/build-push-action@v2
#      with:
#        push: true
#        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.versioning.outputs.version }}
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.REMOTE_SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: whoami
